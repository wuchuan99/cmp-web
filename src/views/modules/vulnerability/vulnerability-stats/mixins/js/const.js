import { graphic } from "echarts";

/**
 * 获取漏洞颜色
 * @param {*} level
 * @returns
 */
export const getVulLevelColor = level => {
  const levelObj = {
    低危: "#008dff",
    中危: "#ffc100",
    高危: "#ff7f00",
    超危: "#ff4c4c"
  };
  return levelObj[level] || "#008dff";
};

/**
 * 漏洞危险等级map
 */
export const vulLevelMap = [
  { label: "低危", value: "低危" },
  { label: "中危", value: "中危" },
  { label: "高危", value: "高危" },
  { label: "超危", value: "超危" }
];

/**
 * 柱状图x轴通用属性
 */
export const barXAxis = {
  type: "category",
  axisTick: {
    show: false
  },
  axisLine: {
    show: false
  }
};

/**
 * 柱状图y轴通用属性
 */
export const barYAxis = {
  axisLine: {
    show: false
  },
  axisTick: {
    show: false
  },
  axisLabel: {
    color: "#999"
  }
};

export const barSeries = {
  showBackground: true,
  barMaxWidth: 20,
  itemStyle: {
    color: new graphic.LinearGradient(0, 0, 0, 1, [
      { offset: 0, color: "#83bff6" },
      { offset: 0.5, color: "#188df0" },
      { offset: 1, color: "#188df0" }
    ])
  },
  emphasis: {
    itemStyle: {
      color: new graphic.LinearGradient(0, 0, 0, 1, [
        { offset: 0, color: "#2378f7" },
        { offset: 0.7, color: "#2378f7" },
        { offset: 1, color: "#83bff6" }
      ])
    }
  }
};

export const tooltip = {
  tooltip: {
    trigger: "item",
    axisPointer: {
      type: "shadow"
    }
  }
};

export const grid = {
  top: "20%",
  bottom: "16%",
  left: "15%",
  right: "8%"
};

export const toolbox = {
  show: true,
  feature: {
    saveAsImage: {
      show: true,
      title: "导出"
    }
  },
  showTitle: false,
  iconStyle: {
    borderColor: "#666",
    borderWidth: 2
  },
  emphasis: {
    iconStyle: {
      borderColor: "#188df0"
    }
  },
  bottom: "2%",
  right: "2%"
};

export const radarOption = {
  center: ["50%", "55%"],
  radius: "50%",
  startAngle: 90,
  splitNumber: 4,
  shape: "circle",
  axisName: {
    color: "#333",
    formatter: function(value) {
      // 10 6 这些你自定义就行
      const v = value.substring(0, 6) + "...";
      return value.length > 8 ? v : value;
    }
  },
  splitArea: {
    areaStyle: {
      color: ["#77EADF", "#26C3BE", "#64AFE9", "#428BD4"],
      shadowColor: "rgba(0, 0, 0, 0.2)",
      shadowBlur: 10
    }
  },
  axisLine: {
    lineStyle: {
      color: "rgba(211, 253, 250, 0.8)"
    }
  },
  splitLine: {
    lineStyle: {
      color: "rgba(211, 253, 250, 0.8)"
    }
  }
};

export const radarSeries = {
  areaStyle: {
    color: "rgba(255, 228, 52, 0.6)"
  }
};
