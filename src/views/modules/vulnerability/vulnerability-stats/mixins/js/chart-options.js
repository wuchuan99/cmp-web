import {
  grid,
  barSeries,
  barXAxis,
  barYAxis,
  tooltip,
  toolbox,
  radarOption,
  radarSeries
} from "./const";

export const chartMixins = {
  data() {
    return {
      vendorOption: {
        title: {
          text: "设备厂商分布",
          left: "center",
          top: "5%"
        },
        // color: ["#ee6666"],
        tooltip: {
          trigger: "item"
        },
        toolbox,
        series: [
          {
            type: "pie",
            radius: "50%",
            center: ["50%", "55%"],
            label: {
              formatter: "{b}: {@2012}"
            },
            data: [
              { value: 1048, name: "和利时" },
              { value: 108, name: "西门子" },
              { value: 48, name: "施耐德" },
              { value: 1048, name: "欧姆龙" },
              { value: 1048, name: "罗克韦尔" },
              { value: 1048, name: "Tridium" },
              { value: 1048, name: "通用电气" },
              { value: 1048, name: "艾顿" },
              { value: 1048, name: "研华科技" },
              { value: 1048, name: "TLINK" }
            ]
          }
        ]
      },
      typeOption: {
        grid,
        tooltip,
        toolbox,
        title: {
          text: "漏洞类型分布",
          left: "center",
          top: "5%"
        },
        xAxis: {
          ...barXAxis,
          data: ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]
        },
        yAxis: {
          ...barYAxis
        },
        series: [
          {
            ...barSeries,
            data: [120, 200, 150, 80, 70, 110, 130],
            type: "bar"
          }
        ]
      },
      levelOption: {
        title: {
          text: "漏洞等级分布",
          left: "center",
          top: "5%"
        },
        tooltip: {
          trigger: "item"
        },
        toolbox,
        color: ["#ff4c4c", "#ff7f00", "#ffc100", "#008dff"],
        series: [
          {
            type: "pie",
            radius: "50%",
            center: ["50%", "55%"],
            label: {
              formatter: "{b}: {@2012}"
            },
            data: [
              { value: 1048, name: "超危" },
              { value: 735, name: "高危" },
              { value: 580, name: "中危" },
              { value: 484, name: "低危" }
            ],
            emphasis: {
              itemStyle: {
                shadowBlur: 10,
                shadowOffsetX: 0,
                shadowColor: "rgba(0, 0, 0, 0.5)"
              }
            }
          }
        ]
      },
      weakPasswordOption: {
        grid,
        tooltip,
        toolbox,
        title: {
          text: "弱口令分布",
          left: "center",
          top: "5%"
        },
        xAxis: {
          ...barXAxis,
          data: ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]
        },
        yAxis: {
          ...barYAxis
        },
        series: [
          {
            ...barSeries,
            data: [120, 200, 150, 80, 70, 110, 130],
            type: "bar"
          }
        ]
      },
      vulOption: {
        color: ["#FFE434", "#56A3F1", "#FF917C", "#67F9D8"],
        title: {
          text: "高危漏洞分布",
          left: "center",
          top: "5%"
        },
        tooltip: {
          trigger: "item",
          formatter: params => {
            let str = "";
            params.data.labels.map((item, index) => {
              str += `<div style="display: flex;align-items: center;margin-top: ${
                index === 0 ? 0 : 10
              }">
                        <span style="margin-right:8px;margin-left:3px;border-radius:4px;width:4px;height:4px;background-color:#FFE434;"></span>
                        <div style="flex: 1;display: flex;align-items: center;justify-content: space-between;">
                          <span style="font-size:14px;color:#666;font-weight:400;margin-left:2px">${item}</span>
                          <span style="margin-left:20px;font-size:14px;color:#666;font-weight:900">${
                            params.data["value"][index]
                          }</span>
                        </div>
                      </div>`;
            });
            return `<div>${str}</div>`;
          },
          position(pos, params, dom, rect, size) {
            return {
              left: pos[0] - size.contentSize[0] - 20,
              top: pos[1] + 20
            };
          }
        },
        toolbox,
        radar: {
          indicator: [
            { text: "Indicator1" },
            { text: "Indicator2" },
            { text: "Indicator3" },
            { text: "Indicator4" },
            { text: "Indicator5" }
          ],
          ...radarOption
        },
        series: [
          {
            type: "radar",
            ...radarSeries,
            data: [
              {
                value: [60, 5, 0.3, -100, 1500]
              }
            ]
          }
        ]
      }
    };
  }
};
